<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="ehcache.xsd" updateCheck="true"
	monitoring="autodetect" dynamicConfig="true">
	<!-- 设置缓存文件 .data 的创建路径。 如果该路径是 Java 系统参数，当前虚拟机会重新赋值。 下面的参数这样解释： user.home 
		– 用户主目录 user.dir – 用户当前工作目录 java.io.tmpdir – 默认临时文件路径 -->

	<!-- 缺省缓存配置。CacheManager 会把这些配置应用到程序中。 下列属性是 defaultCache 必须的： maxInMemory 
		- 设定内存中创建对象的最大值。 eternal - 设置元素（译注：内存中对象）是否永久驻留。如果是，将忽略超 时限制且元素永不消亡。 timeToIdleSeconds 
		- 设置某个元素消亡前的停顿时间。 也就是在一个元素消亡之前，两次访问时间的最大时间间隔值。 这只能在元素不是永久驻留时有效（译注：如果对象永恒不灭，则 
		设置该属性也无用）。 如果该值是 0 就意味着元素可以停顿无穷长的时间。 timeToLiveSeconds - 为元素设置消亡前的生存时间。 也就是一个元素从构建到消亡的最大时间间隔值。 
		这只能在元素不是永久驻留时有效。 overflowToDisk - 设置当内存中缓存达到 maxInMemory 限制时元素是否可写到磁盘 上。 -->

	<diskStore path="java.io.tmpdir" />

	<!-- 回收策略”(eviction policy) 的三种： LRU : (Least Recently Used)最近最少使用 LFU : 
		(Least Frequently Used)最不经常使用 FIFO : (First In First Out)先入先出 -->

	<defaultCache maxEntriesLocalHeap="10000" eternal="false"
		timeToIdleSeconds="100" timeToLiveSeconds="200" overflowToDisk="true"
		diskSpoolBufferSizeMB="30" maxEntriesLocalDisk="10000000"
		diskPersistent="false" diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU" statistics="false">
	</defaultCache>


	<!-- 以下为负载形式配置 
	<cacheManagerPeerProviderFactory
		class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"
		properties="peerDiscovery=manual, rmiUrls=//10.61.60.27:44444/gCache" />

	<cacheManagerPeerListenerFactory
		class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory"
		properties="hostName=10.61.62.225, port=44444, socketTimeoutMillis=20000" />

	<cache name="gCache" maxElementsInMemory="20000" eternal="false"
		overflowToDisk="true" timeToIdleSeconds="0" timeToLiveSeconds="7200"
		memoryStoreEvictionPolicy="LFU">
		<cacheEventListenerFactory
			class="net.sf.ehcache.distribution.RMICacheReplicatorFactory" />
		<bootstrapCacheLoaderFactory
			class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory" />
	</cache>
	
	-->
</ehcache>